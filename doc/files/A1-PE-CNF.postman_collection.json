{
  "info": {
    "_postman_id": "bcfcb45f-84a1-4a9a-87e8-386181b649df",
    "name": "A1-PE-CNF",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "[TEST] SO Catalog DB Cloud Sites",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful GET request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "",
              "var resp = pm.response.json()",
              "",
              "pm.test(\"Check if cloud region is properly defined\", function () {",
              "    pm.expect(resp.id).to.eql(\"K8sRegion\");",
              "    pm.expect(resp.identityService).not.to.be.null;",
              "    pm.expect(resp.identity_service_id).not.to.be.null;",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "basic",
          "basic": [
            {
              "key": "password",
              "value": "password1$",
              "type": "string"
            },
            {
              "key": "username",
              "value": "bpel",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://{{k8s}}:{{catalogdb-port}}/cloudSite/K8sRegion",
          "protocol": "http",
          "host": [
            "{{k8s}}"
          ],
          "port": "{{catalogdb-port}}",
          "path": [
            "cloudSite",
            "K8sRegion"
          ]
        }
      },
      "response": []
    },
    {
      "name": "[STEP 1] SDC Catalog Service",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "name = pm.variables.get(\"service-name\");",
              "version = pm.variables.get(\"service-version\");",
              "console.log(\"Lookup service mode in SDC Catalog: {\" + name + \":\" + version + \"}\");",
              "ee = _.find(pm.response.json(),{\"name\": name, \"version\": version});",
              "",
              "pm.test(\"Find defined service in SDC catalog\", function () {",
              "    pm.expect(ee).not.to.be.undefined;",
              "});",
              "",
              "pm.environment.set(\"service-uuid\",ee.uuid);",
              "pm.environment.set(\"service-invariantUUID\",ee.invariantUUID);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
            "key": "Authorization",
            "value": "Basic dmlkOktwOGJKNFNYc3pNMFdYbGhhazNlSGxjc2UyZ0F3ODR2YW9HR21KdlV5MlU=",
            "type": "text"
          },
          {
            "key": "X-ECOMP-InstanceID",
            "value": "VID",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://{{k8s}}:30204/sdc/v1/catalog/services",
          "protocol": "https",
          "host": [
            "{{k8s}}"
          ],
          "port": "30204",
          "path": [
            "sdc",
            "v1",
            "catalog",
            "services"
          ]
        }
      },
      "response": []
    },
    {
      "name": "[TEST] SDC Catalog Service Metadata",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
            "key": "Authorization",
            "value": "Basic dmlkOktwOGJKNFNYc3pNMFdYbGhhazNlSGxjc2UyZ0F3ODR2YW9HR21KdlV5MlU=",
            "type": "text"
          },
          {
            "key": "X-ECOMP-InstanceID",
            "value": "VID",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://{{k8s}}:30204/sdc/v1/catalog/services/{{service-uuid}}/metadata",
          "protocol": "https",
          "host": [
            "{{k8s}}"
          ],
          "port": "30204",
          "path": [
            "sdc",
            "v1",
            "catalog",
            "services",
            "{{service-uuid}}",
            "metadata"
          ]
        }
      },
      "response": []
    },
    {
      "name": "[STEP 2] SO Catalog DB Service xNFs",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful GET request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "",
              "",
              "x = pm.response.json();",
              "pm.environment.set(\"vnf-modelinfo-modelname\",x.serviceVnfs[0].modelInfo.modelName);",
              "pm.environment.set(\"vnf-modelinfo-modelversion\",x.serviceVnfs[0].modelInfo.modelVersion);",
              "pm.environment.set(\"vnf-modelinfo-modeluuid\",x.serviceVnfs[0].modelInfo.modelUuid);",
              "pm.environment.set(\"vnf-modelinfo-modelinvariantuuid\",x.serviceVnfs[0].modelInfo.modelInvariantUuid);",
              "pm.environment.set(\"vnf-modelinfo-modelcustomizationuuid\",x.serviceVnfs[0].modelInfo.modelCustomizationUuid);",
              "pm.environment.set(\"vnf-modelinfo-modelinstancename\",x.serviceVnfs[0].modelInfo.modelInstanceName);",
              "pm.environment.set(\"vnf-vfmodule-0-modelinfo-modelname\",x.serviceVnfs[0].vfModules[0].modelInfo.modelName);",
              "pm.environment.set(\"vnf-vfmodule-0-modelinfo-modeluuid\",x.serviceVnfs[0].vfModules[0].modelInfo.modelUuid);",
              "pm.environment.set(\"vnf-vfmodule-0-modelinfo-modelinvariantuuid\",x.serviceVnfs[0].vfModules[0].modelInfo.modelInvariantUuid);",
              "pm.environment.set(\"vnf-vfmodule-0-modelinfo-modelcustomizationuuid\",x.serviceVnfs[0].vfModules[0].modelInfo.modelCustomizationUuid);",
              "pm.environment.set(\"vnf-vfmodule-0-label\",x.serviceVnfs[0].vfModules[0].vfModuleLabel);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "basic",
          "basic": [
            {
              "key": "password",
              "value": "password1$",
              "type": "string"
            },
            {
              "key": "username",
              "value": "bpel",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://{{k8s}}:{{catalogdb-port}}/ecomp/mso/catalog/v2/serviceVnfs?serviceModelInvariantUuid={{service-invariantUUID}}",
          "protocol": "http",
          "host": [
            "{{k8s}}"
          ],
          "port": "{{catalogdb-port}}",
          "path": [
            "ecomp",
            "mso",
            "catalog",
            "v2",
            "serviceVnfs"
          ],
          "query": [
            {
              "key": "serviceModelName",
              "value": "{{service-name}}",
              "disabled": true
            },
            {
              "key": "serviceModelVersion",
              "value": "{{service-version}}",
              "disabled": true
            },
            {
              "key": "serviceModelInvariantUuid",
              "value": "{{service-invariantUUID}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "[STEP 3] SO Self-Serve Service Assign & Activate",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "x = pm.response.json();",
              "pm.environment.set(\"so-request-id\",x.requestReferences.requestId);",
              "pm.environment.set(\"service-instance-id\",x.requestReferences.instanceId);"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "y = pm.environment.get(\"service-instance-name\").split(\"-\");",
              "if (!isNaN(y[y.length - 1])) {",
              "    y[y.length - 1] = (y[y.length - 1] * 1 + 1).toString();",
              "}",
              "pm.environment.set(\"service-instance-name\", y.join(\"-\"));",
              "",
              "pm.environment.set(\"vnf-modelinfo-instancename\",pm.environment.get(\"service-instance-name\") + \"-cnf\")",
              "pm.environment.set(\"vnf-vfmodule-0-modelinfo-instancename\",pm.environment.get(\"service-instance-name\") + \"-\" + pm.environment.get(\"vnf-vfmodule-0-label\"))"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "basic",
          "basic": [
            {
              "key": "password",
              "value": "password1$",
              "type": "string"
            },
            {
              "key": "username",
              "value": "InfraPortalClient",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "type": "text",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"requestDetails\": {\n        \"subscriberInfo\": {\n            \"globalSubscriberId\": \"Demonstration\"\n        },\n        \"requestInfo\": {\n            \"suppressRollback\": false,\n            \"productFamilyId\": \"a9a77d5a-123e-4ca2-9eb9-0b015d2ee0fb\",\n            \"requestorId\": \"{{$guid}}\",\n            \"instanceName\": \"{{service-instance-name}}\",\n            \"source\": \"Postman\"\n        },\n        \"cloudConfiguration\": {\n            \"lcpCloudRegionId\": \"K8sRegion\",\n            \"tenantId\": \"k8stenant\",\n            \"cloudOwner\": \"CloudOwner\"\n        },\n        \"requestParameters\": {\n            \"subscriptionServiceType\": \"vFW\",\n            \"userParams\": [\n                {\n                    \"Homing_Solution\": \"none\"\n                },\n                {\n                    \"service\": {\n                        \"instanceParams\": [\n                            {}\n                        ],\n                        \"instanceName\": \"{{service-instance-name}}\",\n                        \"resources\": {\n                            \"vnfs\": [\n                                {\n                                    \"modelInfo\": {\n                                        \"modelName\": \"{{vnf-modelinfo-modelname}}\",\n                                        \"modelVersionId\": \"{{vnf-modelinfo-modeluuid}}\",\n                                        \"modelInvariantUuid\": \"{{vnf-modelinfo-modelinvariantuuid}}\",\n                                        \"modelVersion\": \"{{vnf-modelinfo-modelversion}}\",\n                                        \"modelCustomizationId\": \"{{vnf-modelinfo-modelcustomizationuuid}}\",\n                                        \"modelInstanceName\": \"{{vnf-modelinfo-modelinstancename}}\"\n                                    },\n                                    \"cloudConfiguration\": {\n                                        \"lcpCloudRegionId\": \"K8sRegion\",\n                                        \"tenantId\": \"k8stenant\"\n                                    },\n                                    \"platform\": {\n                                        \"platformName\": \"test\"\n                                    },\n                                    \"lineOfBusiness\": {\n                                        \"lineOfBusinessName\": \"LOB-Demonstration\"\n                                    },\n                                    \"productFamilyId\": \"a9a77d5a-123e-4ca2-9eb9-0b015d2ee0fb\",\n                                    \"instanceName\": \"{{vnf-modelinfo-instancename}}\",\n                                    \"instanceParams\": [\n                                        {\n                                            \"k8s-rb-profile-name\": \"default\",\n                                            \"externalNodeIp\": \"{{managed_k8s}}\",\n                                            \"ftp-host\": \"{{managed_k8s}}\",\n                                            \"oran_name\": \"oran-a1pesim\"\n                                        }\n                                    ],\n                                    \"vfModules\": [\n                                        {\n                                            \"modelInfo\": {\n                                                \"modelName\": \"{{vnf-vfmodule-0-modelinfo-modelname}}\",\n                                                \"modelVersionId\": \"{{vnf-vfmodule-0-modelinfo-modeluuid}}\",\n                                                \"modelInvariantUuid\": \"{{vnf-vfmodule-0-modelinfo-modelinvariantuuid}}\",\n                                                \"modelVersion\": \"1\",\n                                                \"modelCustomizationId\": \"{{vnf-vfmodule-0-modelinfo-modelcustomizationuuid}}\"\n                                            },\n                                            \"instanceName\": \"{{vnf-vfmodule-0-modelinfo-instancename}}\",\n                                            \"instanceParams\": [\n                                                {\n                                                    \"k8s-rb-profile-name\": \"default\",\n                                                    \"externalNodeIp\": \"{{managed_k8s}}\",\n                                                    \"ftp-host\": \"{{managed_k8s}}\",\n                                                    \"oran_name\": \"oran-a1pesim\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        \"modelInfo\": {\n                            \"modelVersion\": \"{{service-version}}\",\n                            \"modelVersionId\": \"{{service-uuid}}\",\n                            \"modelInvariantId\": \"{{service-invariantUUID}}\",\n                            \"modelName\": \"{{service-name}}\",\n                            \"modelType\": \"service\"\n                        }\n                    }\n                }\n            ],\n            \"aLaCarte\": false\n        },\n        \"project\": {\n            \"projectName\": \"Project-Demonstration\"\n        },\n        \"owningEntity\": {\n            \"owningEntityId\": \"8a6ce244-fce8-4e95-b53c-6283f65e6068\",\n            \"owningEntityName\": \"OE-Demonstration\"\n        },\n        \"modelInfo\": {\n            \"modelVersion\": \"{{service-version}}\",\n            \"modelVersionId\": \"{{service-uuid}}\",\n            \"modelInvariantId\": \"{{service-invariantUUID}}\",\n            \"modelName\": \"{{service-name}}\",\n            \"modelType\": \"service\"\n        }\n    }\n}"
        },
        "url": {
          "raw": "http://{{k8s}}:30277/onap/so/infra/serviceInstantiation/v7/serviceInstances",
          "protocol": "http",
          "host": [
            "{{k8s}}"
          ],
          "port": "30277",
          "path": [
            "onap",
            "so",
            "infra",
            "serviceInstantiation",
            "v7",
            "serviceInstances"
          ]
        }
      },
      "response": []
    },
    {
      "name": "[TEST] SO Infra Active Requests",
      "request": {
        "auth": {
          "type": "basic",
          "basic": [
            {
              "key": "username",
              "value": "bpel",
              "type": "string"
            },
            {
              "key": "password",
              "value": "password1$",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://{{k8s}}:30277/infraActiveRequests//{{so-request-id}}",
          "protocol": "http",
          "host": [
            "{{k8s}}"
          ],
          "port": "30277",
          "path": [
            "infraActiveRequests",
            "",
            "{{so-request-id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "SO Service Delete",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "x = pm.response.json();",
              "pm.environment.set(\"so-request-id\",x.requestReferences.requestId);"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "basic",
          "basic": [
            {
              "key": "password",
              "value": "password1$",
              "type": "string"
            },
            {
              "key": "username",
              "value": "InfraPortalClient",
              "type": "string"
            }
          ]
        },
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"requestDetails\": {\n        \"subscriberInfo\": {\n            \"globalSubscriberId\": \"Demonstration\"\n        },\n        \"requestInfo\": {\n            \"suppressRollback\": false,\n            \"productFamilyId\": \"a9a77d5a-123e-4ca2-9eb9-0b015d2ee0fb\",\n            \"requestorId\": \"{{$guid}}\",\n            \"instanceName\": \"{{service-instance-name}}\",\n            \"source\": \"Postman\"\n        },\n        \"cloudConfiguration\": {\n            \"lcpCloudRegionId\": \"K8sRegion\",\n            \"tenantId\": \"k8stenant\",\n            \"cloudOwner\": \"CloudOwner\"\n        },\n        \"requestParameters\": {\n            \"subscriptionServiceType\": \"vFW\",\n            \"userParams\": [\n                {\n                    \"Homing_Solution\": \"none\"\n                },\n                {\n                    \"service\": {\n                        \"instanceParams\": [\n                            {}\n                        ],\n                        \"instanceName\": \"{{service-instance-name}}\",\n                        \"resources\": {\n                            \"vnfs\": [\n                                {\n                                    \"modelInfo\": {\n                                        \"modelName\": \"{{vnf-modelinfo-modelname}}\",\n                                        \"modelVersionId\": \"{{vnf-modelinfo-modeluuid}}\",\n                                        \"modelInvariantUuid\": \"{{vnf-modelinfo-modelinvariantuuid}}\",\n                                        \"modelVersion\": \"{{vnf-modelinfo-modelversion}}\",\n                                        \"modelCustomizationId\": \"{{vnf-modelinfo-modelcustomizationuuid}}\",\n                                        \"modelInstanceName\": \"{{vnf-modelinfo-modelinstancename}}\"\n                                    },\n                                    \"cloudConfiguration\": {\n                                        \"lcpCloudRegionId\": \"K8sRegion\",\n                                        \"tenantId\": \"k8stenant\"\n                                    },\n                                    \"platform\": {\n                                        \"platformName\": \"test\"\n                                    },\n                                    \"lineOfBusiness\": {\n                                        \"lineOfBusinessName\": \"LOB-Demonstration\"\n                                    },\n                                    \"productFamilyId\": \"a9a77d5a-123e-4ca2-9eb9-0b015d2ee0fb\",\n                                    \"instanceName\": \"{{vnf-modelinfo-instancename}}\",\n                                    \"instanceParams\": [\n                                        {\n                                            \"k8s-rb-profile-name\": \"default\",\n                                            \"externalNodeIp\": \"{{managed_k8s}}\",\n                                            \"ftp-host\": \"{{managed_k8s}}\",\n                                            \"oran_name\": \"oran-a1pesim\"\n                                        }\n                                    ],\n                                    \"vfModules\": [\n                                        {\n                                            \"modelInfo\": {\n                                                \"modelName\": \"{{vnf-vfmodule-0-modelinfo-modelname}}\",\n                                                \"modelVersionId\": \"{{vnf-vfmodule-0-modelinfo-modeluuid}}\",\n                                                \"modelInvariantUuid\": \"{{vnf-vfmodule-0-modelinfo-modelinvariantuuid}}\",\n                                                \"modelVersion\": \"1\",\n                                                \"modelCustomizationId\": \"{{vnf-vfmodule-0-modelinfo-modelcustomizationuuid}}\"\n                                            },\n                                            \"instanceName\": \"{{vnf-vfmodule-0-modelinfo-instancename}}\",\n                                            \"instanceParams\": [\n                                                {\n                                                    \"k8s-rb-profile-name\": \"default\",\n                                                    \"externalNodeIp\": \"{{managed_k8s}}\",\n                                                    \"ftp-host\": \"{{managed_k8s}}\",\n                                                    \"oran_name\": \"oran-a1pesim\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        \"modelInfo\": {\n                            \"modelVersion\": \"{{service-version}}\",\n                            \"modelVersionId\": \"{{service-uuid}}\",\n                            \"modelInvariantId\": \"{{service-invariantUUID}}\",\n                            \"modelName\": \"{{service-name}}\",\n                            \"modelType\": \"service\"\n                        }\n                    }\n                }\n            ],\n            \"aLaCarte\": false\n        },\n        \"project\": {\n            \"projectName\": \"Project-Demonstration\"\n        },\n        \"owningEntity\": {\n            \"owningEntityId\": \"8a6ce244-fce8-4e95-b53c-6283f65e6068\",\n            \"owningEntityName\": \"OE-Demonstration\"\n        },\n        \"modelInfo\": {\n            \"modelVersion\": \"{{service-version}}\",\n            \"modelVersionId\": \"{{service-uuid}}\",\n            \"modelInvariantId\": \"{{service-invariantUUID}}\",\n            \"modelName\": \"{{service-name}}\",\n            \"modelType\": \"service\"\n        }\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://{{k8s}}:30277/onap/so/infra/serviceInstantiation/v7/serviceInstances/{{service-instance-id}}",
          "protocol": "http",
          "host": [
            "{{k8s}}"
          ],
          "port": "30277",
          "path": [
            "onap",
            "so",
            "infra",
            "serviceInstantiation",
            "v7",
            "serviceInstances",
            "{{service-instance-id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "CDS Blueprint Deploy",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"cba_name\", jsonData.blueprintModel.artifactName);",
              "pm.environment.set(\"cba_version\", jsonData.blueprintModel.artifactVersion);",
              "pm.environment.set(\"cba_id\", jsonData.blueprintModel.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": []
            }
          ]
        },
        "url": {
          "raw": "{{k8s}}:30499/api/v1/blueprint-model/publish",
          "host": [
            "{{k8s}}"
          ],
          "port": "30499",
          "path": [
            "api",
            "v1",
            "blueprint-model",
            "publish"
          ]
        }
      },
      "response": []
    }
  ]
}